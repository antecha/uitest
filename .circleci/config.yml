defaults: &defaults
  docker:
    - image: circleci/node:12.13.1
  working_directory: ~/uitest

aliases:
  - &save_dependencies
    key: v1.01-dependencies-{{ checksum "yarn.lock" }}
    paths:
      - node_modules
  - &restore_dependencies
    keys:
      - v1.01-dependencies-{{ checksum "yarn.lock" }}
      - v1.01-dependencies-

version: 2.1

jobs:
  install_dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_dependencies
      - run: sudo npm install -g yarn@latest
      - run: yarn install
      - save_cache: *save_dependencies

  test_lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_dependencies
      - run: yarn run test:lint

  test_jest:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_dependencies
      - run: yarn run test:ci

  deploy_staging:
    <<: *defaults
    steps:
      - run: echo ${CIRCLE_BRANCH}
      - run: curl -X POST -d {} ${NETLIFY_API_PRODUCTION}?trigger_branch=staging&trigger_title=circle2staging

  deploy_production:
    <<: *defaults
    steps:
      - run: curl -X POST -d {} ${NETLIFY_API_PRODUCTION}

  deploy_preview:
    <<: *defaults
    steps:
      - run: echo previewURL ${CIRCLE_BRANCH}.antecha-uitest.netlify.com
      - run: curl -X POST -d {} ${NETLIFY_API_PRODUCTION}?trigger_branch=${CIRCLE_BRANCH}&trigger_title=circle2${CIRCLE_BRANCH}

  publish_package:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_dependencies
      - run: echo "//npm.pkg.github.com/:_authToken=$GH_TOKEN" > ~/uitest/.npmrc
      - run: npx semantic-release

workflows:
  version: 2.1

  development:
    jobs:
      - install_dependencies:
          filters:
            branches:
              ignore:
                - staging
                - master
      - test_lint:
          requires:
            - install_dependencies
      - test_jest:
          requires:
            - install_dependencies
      # - deploy_preview:
      #     type: approval

  staging:
    jobs:
      - deploy_staging:
          filters:
            branches:
              only:
                - staging

  publish:
    jobs:
      - install_dependencies:
          filters:
            branches:
              only:
                - master
      - publish_package:
          requires:
            - install_dependencies
      - deploy_production:
          requires:
            - publish_package
